syntax = "proto3";

package api.account.v1;

option go_package = "account/api/account/v1;v1";
option java_multiple_files = true;
option java_package = "api.account.v1";

import "google/api/annotations.proto";

service User {
    rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
        option (google.api.http) = {
            post: "/v1/user"
            body: "*"
        };
    }
    rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
        option (google.api.http) = {
            delete: "/v1/user/{id}"
        };
    }
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
        option (google.api.http) = {
            put: "/v1/user"
            body: "*"
        };
    }   // 注意：传入的非0值都将被更新
    rpc GetUser (GetUserRequest) returns (GetUserReply) {
        option (google.api.http) = {
            get: "/v1/user/{id}"
        };
    }
    rpc ListUser (ListUserRequest) returns (ListUserReply) {
        option (google.api.http) = {
            get: "/v1/user"
        };
    }
    rpc VerifyPasswordByEmail (VerifyPasswordByEmailRequest) returns (VerifyPasswordReply) {
        option (google.api.http) = {
            post: "/v1/verify_user_email"
            body: "*"
        };
    }   // 通过email登录
}


message VerifyPasswordByEmailRequest {
    string email = 1;
    string password = 2;
}
message VerifyPasswordReply {
    bool correct = 1;
}

message CreateUserRequest {
    string name = 1;
    string email = 2;
    string password = 3;
    string code = 4;
}
message CreateUserReply {
    int32 id = 1;
}

message UpdateUserRequest {
    int32 id = 1;
    string name = 2;
    string email = 3;
    string password = 4;
    string salt = 5;
    string icon = 6;
    int32 paper_count = 7;
    int32 buy_count = 8;
    int32 coin = 9;
    int32 score = 10;
}
message UpdateUserReply {}

message DeleteUserRequest {
    int32 id = 1;
}
message DeleteUserReply {}

message GetUserRequest {
    int32 id = 1;
}
message GetUserReply {
    UserStruct user = 1;
}

message ListUserRequest {
    int32 pageNum = 1;
    int32 pageSize = 2;
}
message ListUserReply {
    repeated UserStruct users = 1;
}

message UserStruct {
    int32 id = 1;
    int64 create_time = 2;
    int64 update_time = 3;
    int64 login_time = 4;
    string name = 5;
    string email = 6;
    string icon = 7;
    int32 paper_count = 8;
    int32 buy_count = 9;
    int32 coin = 10;
    int32 score = 11;
}